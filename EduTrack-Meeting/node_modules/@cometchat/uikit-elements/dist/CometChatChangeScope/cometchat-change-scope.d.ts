import { LitElement } from 'lit';
import { ChangeScopeStyle } from './ChangeScopeStyle';
import { DropdownStyle } from '../CometChatDropdown/DropdownStyle';
export declare class CometChatChangeScope extends LitElement {
    title: string;
    buttonText: string;
    arrowIconURL: string;
    closeIconURL: string;
    changeScopeStyle: ChangeScopeStyle;
    selectedOption: string;
    options: any;
    dropdownStyle: DropdownStyle;
    static styles: import("lit").CSSResult[];
    setStyling(): void;
    render(): import("lit-html").TemplateResult<1>;
    onCloseClick: () => void;
    dowpdownChanged: (event: any) => void;
    dispatchScope: () => void;
    titleStyle: () => {
        textFont: string | undefined;
        textColor: string | undefined;
    };
    closeIconStyle: () => {
        height: string;
        width: string;
        buttonIconTint: string | undefined;
        border: string;
        borderRadius: string;
        background: string;
    };
    buttonStyle: () => {
        height: string;
        width: string;
        display: string;
        alignItems: string;
        justifyContent: string;
        buttonTextFont: string | undefined;
        buttonTextColor: string | undefined;
        background: string | undefined;
        border: string;
        borderRadius: string;
    };
    changeScopeStyles: () => {
        height: string | undefined;
        width: string | undefined;
        border: string | undefined;
        borderRadius: string | undefined;
        background: string | undefined;
    };
}
declare global {
    namespace JSX {
        interface IntrinsicElements {
            "cometchat-change-scope": any;
        }
    }
    interface TagNameMap {
        'cometchat-change-scope': CometChatChangeScope;
    }
}
//# sourceMappingURL=cometchat-change-scope.d.ts.map