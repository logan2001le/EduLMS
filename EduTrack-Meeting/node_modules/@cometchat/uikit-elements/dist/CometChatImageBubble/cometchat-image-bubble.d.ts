import { LitElement, PropertyValueMap } from 'lit';
import { ImageBubbleStyle } from './ImageBubbleStyle';
export declare class CometChatImageBubble extends LitElement {
    src: string;
    placeholderImage: string;
    caption: string;
    imageStyle: ImageBubbleStyle;
    timer: any;
    static styles: import("lit").CSSResult[];
    image: string;
    dispatchClickEvent: any;
    protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void;
    downloadImage(imgUrl: string, attemptCount?: number): Promise<any>;
    updateImage(): void;
    render(): import("lit-html").TemplateResult<1>;
    imageBubbleStyle: () => {
        height: string | undefined;
        width: string | undefined;
        border: string | undefined;
        borderRadius: string | undefined;
        background: string | undefined;
    };
    captionStyle: () => {
        textFont: string;
        textColor: string;
    };
}
declare global {
    namespace JSX {
        interface IntrinsicElements {
            "cometchat-image-bubble": any;
        }
    }
    interface TagNameMap {
        'cometchat-image-bubble': CometChatImageBubble;
    }
}
//# sourceMappingURL=cometchat-image-bubble.d.ts.map