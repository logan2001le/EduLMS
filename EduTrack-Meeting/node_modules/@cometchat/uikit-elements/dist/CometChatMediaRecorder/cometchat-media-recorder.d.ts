import { LitElement } from "lit";
import { MediaRecorderStyle } from "./MediaRecorderStyle";
declare enum RecordingType {
    audio = 0,
    video = 1
}
export declare class CometChatMediaRecorder extends LitElement {
    startIconURL?: string;
    closeIconURL?: string;
    stopIconURL?: string;
    submitButtonIconURL?: string;
    startIconText?: string;
    stopIconText?: string;
    submitButtonIconText?: string;
    autoRecording: boolean;
    recordingType: RecordingType;
    mediaPlayerStyle: MediaRecorderStyle;
    private mediaRecorder?;
    private recordedChunks;
    private timerInterval;
    private isRecording;
    private mediaPreviewUrl;
    private manualStop;
    private counter;
    private stream;
    private blob;
    static styles: import("lit").CSSResult;
    private mediaRecorderButton;
    render(): import("lit-html").TemplateResult<1>;
    connectedCallback(): void;
    formatTime(timeInSeconds: number): string;
    initMediaRecorder(): Promise<void>;
    handleStartRecording(): void;
    handleStopRecording(): void;
    handleSubmit(event: any): void;
    handleCloseRecording(event: any): void;
    startTimer(): void;
    stopTimer(): void;
    disconnectedCallback(): void;
    reset(): void;
    clearStream(): void;
    getMediaRecorderButtonStyle(tint?: string): any;
    getBodyStyle(): {
        height: string;
        width: string;
        border: string;
        borderRadius: string;
        background: string;
    };
    getTextStyle(): {
        font: string;
        color: string;
    };
}
declare global {
    namespace JSX {
        interface IntrinsicElements {
            "cometchat-media-recorder": any;
        }
    }
    interface TagNameMap {
        "cometchat-media-recorder": CometChatMediaRecorder;
    }
}
export {};
//# sourceMappingURL=cometchat-media-recorder.d.ts.map