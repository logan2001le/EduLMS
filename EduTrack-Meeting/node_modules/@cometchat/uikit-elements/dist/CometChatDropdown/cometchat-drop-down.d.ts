import { LitElement } from "lit";
import { DropdownStyle } from "./DropdownStyle";
export declare class CometChatDropdown extends LitElement {
    arrowIconURL?: string;
    dropdownStyle: DropdownStyle;
    options: string[];
    selectedOption?: string;
    static styles: import("lit").CSSResult[];
    isHovering: boolean;
    hoveredOption: string;
    onMouseHover: any;
    render(): import("lit-html").TemplateResult<1>;
    onButtonClick: (event: any) => void;
    toggleHidden(): void;
    onOptionClick: (selectedOption: any) => void;
    selectedOptionStyle: () => {
        border: string | undefined;
        borderRadius: string | undefined;
        background: string | undefined;
        width: string | undefined;
        height: string | undefined;
    };
    selectedOptionTextStyle: () => {
        textFont: string;
        textColor: string;
    };
    optionTextStyle: (option: string) => {};
    optionStyle: (option: string) => {};
    arowIconStyle: () => {
        WebkitMask: string;
        background: string;
    };
    optionWrapperStyle: () => {
        width: string | undefined;
        background: string | undefined;
    };
}
declare global {
    interface TagNameMap {
        "cometchat-dropdown": CometChatDropdown;
    }
    namespace JSX {
        interface IntrinsicElements {
            "cometchat-dropdown": any;
        }
    }
}
//# sourceMappingURL=cometchat-drop-down.d.ts.map