import { LitElement } from 'lit';
import { InputStyle } from './InputStyle';
export declare class CometChatInput extends LitElement {
    disabled: boolean;
    value: string;
    type: any;
    checked: boolean;
    placeholderText: string;
    hidden: boolean;
    multiple: boolean;
    accept: string;
    dir: "ltr" | "rtl" | "auto";
    inputStyle: InputStyle;
    static styles: import("lit").CSSResult[];
    onChange: (e: any) => void;
    render(): import("lit-html").TemplateResult<1>;
    labelStyle: () => {
        padding: string | undefined;
    };
    inputStyles: () => {
        font: string | undefined;
        color: string | undefined;
        height: string | undefined;
        width: string | undefined;
        border: string | undefined;
        borderRadius: string | undefined;
        background: string | undefined;
        boxShadow: string | undefined;
        padding: string | undefined;
    };
    placeholderStyle: () => {
        textFont: string;
        textColor: string;
        background: string;
    };
}
declare global {
    namespace JSX {
        interface IntrinsicElements {
            "cometchat-input": any;
        }
    }
    interface TagNameMap {
        'cometchat-input': CometChatInput;
    }
}
//# sourceMappingURL=cometchat-input.d.ts.map