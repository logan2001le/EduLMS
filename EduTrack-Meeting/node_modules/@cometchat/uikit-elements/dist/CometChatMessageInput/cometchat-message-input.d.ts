import { LitElement, PropertyValueMap } from 'lit';
import { MessageInputStyle } from './MessageInputStyle';
export declare enum auxiliaryButtonAlignmentEnum {
    left = 0,
    right = 1
}
export declare class CometChatMessageInput extends LitElement {
    text: string | null | undefined;
    disabled: boolean;
    placeholderText: string;
    auxiliaryButtonAlignment: auxiliaryButtonAlignmentEnum;
    dir: "ltr" | "rtl" | "auto";
    messageInputStyle: MessageInputStyle;
    inputText: string;
    static styles: import("lit").CSSResult[];
    connectedCallback(): void;
    updateSelection(): void;
    onKeyDown: (event: any) => void;
    sel: any;
    range: any;
    private hasAllSlotsAssigned;
    emptyInputField: () => void;
    pasteHtmlAtCaret(html: any): void;
    protected updated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void;
    private preventPaste;
    protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void;
    disconnectedCallback(): void;
    private checkIfAllSlotsAreAssigned;
    render(): import("lit-html").TemplateResult<1>;
    dispatchChangedEVent: (event: any) => void;
    messageInputStyles: () => {
        height: string | undefined;
        width: string | undefined;
        border: string | undefined;
        borderRadius: string | undefined;
        background: string | undefined;
    };
    inputStyle: () => {
        font: string | undefined;
        color: string | undefined;
        height: string;
        width: string;
        maxHeight: string | undefined;
        border: string | undefined;
        borderRadius: string | undefined;
        background: string | undefined;
        padding: string;
    };
    auxiliaryStyles: () => {
        display: string;
        justifyContent: string;
    };
    dividerStyle: () => {
        height: string;
        width: string;
        background: string | undefined;
    };
}
declare global {
    namespace JSX {
        interface IntrinsicElements {
            'cometchat-message-input': any;
        }
    }
}
//# sourceMappingURL=cometchat-message-input.d.ts.map