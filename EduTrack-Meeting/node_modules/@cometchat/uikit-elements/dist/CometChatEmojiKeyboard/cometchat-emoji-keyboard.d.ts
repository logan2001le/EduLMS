import { LitElement } from 'lit';
import { CometChatEmoji } from './CometChatEmoji';
import { EmojiKeyboardStyle } from './EmojiKeyboardStyle';
export declare class CometChatEmojiKeyboard extends LitElement {
    hideSearch: boolean;
    emojiKeyboardStyle: EmojiKeyboardStyle;
    emojiData: any;
    /**
* Properties for internal use
*/
    iconStyle: any;
    activeIconStyle: any;
    objectKeys: any;
    activeCategory: string;
    static styles: import("lit").CSSResult[];
    connectedCallback(): void;
    buttonStyle: any;
    emojiStyle: any;
    render(): import("lit-html").TemplateResult<1>;
    /**
 * @param  {CometChatEmoji} emojiData
 */
    getEmojiData(emojiData: CometChatEmoji): string;
    getEmojiCategory(): any;
    /**
     * @param  {string} id
     */
    scrollToElement(id: string): void;
    /**
     * @param  {CometChatEmoji} emoji
     */
    onEmojiClick: (emoji: CometChatEmoji) => void;
    /**
      * Props dependent styles for the CometChatEmojiKeyboard.
      *
      */
    emojiContainerStyle: () => {
        width: string | undefined;
        height: string | undefined;
        background: string;
        borderRadius: string | undefined;
        border: string | undefined;
    };
    emojiCategoryWrapper: () => {
        background: string;
    };
    emojiCategoryTitle: () => {
        font: string | undefined;
        color: string;
    };
}
declare global {
    namespace JSX {
        interface IntrinsicElements {
            "cometchat-emoji-keyboard": any;
        }
    }
    interface TagNameMap {
        'cometchat-emoji-keyboard': CometChatEmojiKeyboard;
    }
}
//# sourceMappingURL=cometchat-emoji-keyboard.d.ts.map