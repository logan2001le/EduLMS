import { LitElement, PropertyValueMap } from 'lit';
import { FullScreenViewerStyle } from './FullScreenViewerStyle';
export declare class CometChatFullScreenViewer extends LitElement {
    URL: string;
    closeIconURL: string;
    fullScreenViewerStyle: FullScreenViewerStyle;
    placeholderImage: string;
    timer: any;
    image: string;
    static styles: import("lit").CSSResult[];
    dispatchClickEvent: any;
    protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void;
    downloadImage(imgUrl: string, attemptCount?: number): Promise<any>;
    updateImage(): void;
    render(): import("lit-html").TemplateResult<1>;
    viewerStyle: () => {
        height: string | undefined;
        width: string | undefined;
        background: string | undefined;
        border: string | undefined;
        borderRadius: string | undefined;
    };
    closeIconStyle: () => {
        height: string;
        width: string;
        iconTint: string | undefined;
    };
}
declare global {
    namespace JSX {
        interface IntrinsicElements {
            "cometchat-full-screen-viewer": any;
        }
    }
    interface TagNameMap {
        'cometchat-full-screen-viewer': CometChatFullScreenViewer;
    }
}
//# sourceMappingURL=cometchat-full-screen-viewer.d.ts.map