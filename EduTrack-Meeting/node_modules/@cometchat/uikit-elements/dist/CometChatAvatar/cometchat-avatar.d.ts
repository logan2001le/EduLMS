import { LitElement } from 'lit';
import { AvatarStyle } from './AvatarStyle';
export declare class CometChatAvatar extends LitElement {
    image: string;
    name: string;
    avatarStyle: AvatarStyle;
    static styles: import("lit").CSSResult[];
    constructor();
    update(changedProperties: Map<string, unknown>): void;
    updateAvatar(): void;
    avatar: string;
    generateAvatar: (data: string) => string;
    getCanvasFontSize(font: string): string;
    connectedCallback(): void;
    render(): import("lit-html").TemplateResult<1>;
    getImageStyle: () => {
        backgroundSize: string | undefined;
        backgroundImage: string;
        border: string;
        borderRadius: string | undefined;
    };
    getContainerStyle: () => {
        height: string | undefined;
        width: string | undefined;
        borderRadius: string | undefined;
    };
    getOuterViewStyle: () => {
        height: string | undefined;
        width: string | undefined;
        borderRadius: string | undefined;
        boxShadow: string;
        padding: string | undefined;
    };
}
declare global {
    interface TagNameMap {
        'cometchat-avatar': CometChatAvatar;
    }
    namespace JSX {
        interface IntrinsicElements {
            "cometchat-avatar": any;
        }
    }
}
//# sourceMappingURL=cometchat-avatar.d.ts.map