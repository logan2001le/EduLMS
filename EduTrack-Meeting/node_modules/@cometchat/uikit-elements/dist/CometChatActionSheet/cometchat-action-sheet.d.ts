import { LitElement } from 'lit';
import { ActionSheetStyle } from './ActionSheetStyle';
export declare class CometChatActionSheet extends LitElement {
    hideLayoutMode: boolean;
    title: string;
    layoutModeIconURL: string;
    actionsheetbuttonstyle: any;
    buttonStyle: any;
    layoutMode: string;
    actions: CometChatActionItem[];
    actionSheetStyle: ActionSheetStyle;
    static styles: import("lit").CSSResult[];
    render(): import("lit-html").TemplateResult<1>;
    onActionItemClick(action: CometChatActionItem): void;
    toggleLayoutMode: () => void;
    actionSheetTitleStyle: () => {
        color: string | undefined;
        font: string | undefined;
    };
    sheetItemListStyle: () => {};
    actionSheetWrapperStyle: () => {
        height: string | undefined;
        width: string | undefined;
        border: string | undefined;
        borderRadius: string | undefined;
        background: string | undefined;
    };
    setStyle: (action: CometChatActionItem, index: number) => {};
}
declare global {
    namespace JSX {
        interface IntrinsicElements {
            "cometchat-action-sheet": any;
        }
    }
    interface TagNameMap {
        'cometchat-action-sheet': CometChatActionSheet;
    }
}
export declare const layoutType: Readonly<{
    list: "list";
    grid: "grid";
}>;
export declare class CometChatActionItem {
    id?: string;
    iconURL?: string;
    title?: string;
    iconTint?: string;
    titleFont?: string;
    titleColor?: string;
    background?: string;
    borderRadius?: string;
    onClick?: (() => void) | null;
    constructor(props: Partial<CometChatActionItem>);
}
//# sourceMappingURL=cometchat-action-sheet.d.ts.map