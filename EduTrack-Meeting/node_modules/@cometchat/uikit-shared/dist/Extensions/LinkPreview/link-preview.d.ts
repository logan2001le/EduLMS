import { LitElement, TemplateResult, PropertyValueMap } from 'lit';
import { LinkPreviewStyle } from './LinkPreviewStyle';
export declare class LinkPreview extends LitElement {
    linkPreviewStyle: LinkPreviewStyle;
    URL: string;
    description: string;
    title: string;
    image: string;
    favIconURL: string;
    showFavIcon: boolean;
    static styles: import("lit").CSSResult[];
    linkClicked: () => void;
    protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void;
    render(): TemplateResult<1>;
    linkPreviewTitleStyle: () => {
        font: string | undefined;
        color: string | undefined;
    };
    detailsStyle: () => {
        justifyContent: string;
    };
    linkPreviewContentStyle: () => {
        height: string;
        alignItems: string;
    };
    linkPreviewDescriptionStyle: () => {
        font: string | undefined;
        color: string | undefined;
    };
    linkPreviewContainer: () => {
        width: string | undefined;
        height: string | undefined;
        border: string | undefined;
        borderRadius: string | undefined;
        background: string | undefined;
    };
}
declare global {
    namespace JSX {
        interface IntrinsicElements {
            'link-preview': any;
        }
    }
    interface TagNameMap {
        'link-preview': any;
    }
}
//# sourceMappingURL=link-preview.d.ts.map