import { LitElement, PropertyValueMap, PropertyValues, TemplateResult } from 'lit';
import { ImageModerationStyle } from './ImageModerationStyle';
export declare class ImageModeration extends LitElement {
    message: CometChat.MediaMessage;
    imageModerationStyle: ImageModerationStyle;
    warningText: string;
    unsafeIconURL: string;
    isUnsafe: boolean;
    static styles: import("lit").CSSResult[];
    updated(changedProperties: PropertyValues): void;
    setFilterStyle(): void;
    isUnsafeContent(): void;
    removeWarning: () => void;
    _handleWarningClick(): void;
    protected firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void;
    render(): TemplateResult<1>;
    warningTextStyle(): {
        font: string | undefined;
        color: string | undefined;
    };
    imageBubbleStyle: () => {
        height: string | undefined;
        width: string | undefined;
        border: string | undefined;
        borderRadius: string | undefined;
        background: string | undefined;
    };
}
declare global {
    namespace JSX {
        interface IntrinsicElements {
            'image-moderation': any;
        }
    }
}
//# sourceMappingURL=image-moderation.d.ts.map