import { LitElement, nothing } from 'lit';
import { States } from '@cometchat/uikit-resources';
export declare class StickersKeyboard extends LitElement {
    errorStateText: string;
    emptyStateText: string;
    loadingIconUrl: string;
    stickerStyle: any;
    /**
  * Properties for internal use
  */
    state: States;
    stickerSet: any;
    activeStickerList: any[];
    categoryStickerUrl: any[];
    static styles: import("lit").CSSResult[];
    /**
  * fetching stickers on init
  * @param
  */
    getStickers(): Promise<void>;
    /**
     * Gets The sticker collection when sticker category is changed
     * @param
     */
    stickerSetClicked(sectionItem: string): void;
    /**
     * Sends Sticker as Message
     * @param
     */
    sendStickerMessage(stickerItem: any): void;
    connectedCallback(): void;
    getStateView(): import("lit-html").TemplateResult<1> | typeof nothing;
    render(): import("lit-html").TemplateResult<1>;
    keyboardStyles: () => {
        height: any;
        width: any;
        background: any;
        border: any;
        borderRadius: any;
    };
    sectionStyles: () => {
        background: any;
        border: any;
        borderRadius: any;
    };
    loaderStyle(): {
        iconTint: any;
    };
    decorateMessageStyles: () => {
        textColor: any;
        textFont: any;
    } | {
        textColor?: undefined;
        textFont?: undefined;
    };
}
declare global {
    namespace JSX {
        interface IntrinsicElements {
            "stickers-keyboard": any;
        }
    }
    interface HTMLElementTagNameMap {
        'stickers-keyboard': StickersKeyboard;
    }
}
//# sourceMappingURL=stickers-keyboard.d.ts.map