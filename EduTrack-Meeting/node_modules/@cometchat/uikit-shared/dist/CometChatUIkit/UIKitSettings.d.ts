import { AIExtensionDataSource } from "../AI/AIExtensionDataSource";
import { ExtensionsDataSource } from "../Extensions/ExtensionsDataSource";
export declare class UIKitSettings {
    readonly appId?: string;
    readonly region?: string;
    readonly subscriptionType?: string;
    readonly autoEstablishSocketConnection?: boolean;
    readonly authKey?: string;
    readonly deviceToken?: string;
    readonly googleApiKey?: string;
    readonly disableCalling: boolean;
    readonly roles?: string[];
    readonly adminHost?: string;
    readonly clientHost?: string;
    readonly extensions?: ExtensionsDataSource[];
    readonly aiFeatures?: AIExtensionDataSource[];
    private constructor();
    static fromBuilder(builder: UIKitSettingsBuilder): UIKitSettings;
    getAppId(): string;
    getRegion(): string;
    getRoles(): string[];
    getSubscriptionType(): string;
    getAuthKey(): string;
    isAutoEstablishSocketConnection(): boolean;
    getAdminHost(): string;
    getClientHost(): string;
    getExtensions(): ExtensionsDataSource[];
    getAiFeatures(): AIExtensionDataSource[];
}
export declare class UIKitSettingsBuilder {
    appId?: string;
    region?: string;
    subscriptionType?: string;
    roles?: string[];
    autoEstablishSocketConnection?: boolean;
    authKey?: string;
    deviceToken?: string;
    googleApiKey?: string;
    extensions?: ExtensionsDataSource[];
    disableCalling: boolean;
    adminHost?: string;
    clientHost?: string;
    aiFeatures?: AIExtensionDataSource[];
    build(): UIKitSettings;
    setAppId(appId: string): UIKitSettingsBuilder;
    setRegion(region: string): UIKitSettingsBuilder;
    subscribePresenceForAllUsers(): UIKitSettingsBuilder;
    subscribePresenceForRoles(roles: string[]): UIKitSettingsBuilder;
    subscribePresenceForFriends(): UIKitSettingsBuilder;
    setRoles(roles: string[]): UIKitSettingsBuilder;
    setAutoEstablishSocketConnection(autoEstablishSocketConnection: boolean): UIKitSettingsBuilder;
    setAuthKey(authKey: string): UIKitSettingsBuilder;
    setAdminHost(adminHost: string): UIKitSettingsBuilder;
    setClientHost(clientHost: string): UIKitSettingsBuilder;
    setExtensions(extensions: ExtensionsDataSource[]): UIKitSettingsBuilder;
    setAiFeatures(aiFeatures: AIExtensionDataSource[]): UIKitSettingsBuilder;
}
//# sourceMappingURL=UIKitSettings.d.ts.map