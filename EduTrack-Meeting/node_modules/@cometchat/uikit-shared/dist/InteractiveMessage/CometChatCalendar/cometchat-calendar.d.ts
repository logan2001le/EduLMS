import { LitElement, PropertyDeclaration } from 'lit';
import { CalendarStyle } from './CalendarStyle';
export declare class CometChatCalendar extends LitElement {
    maxDate: string;
    minDate: string;
    timezoneIconURL: string;
    timezoneText: string;
    calendarStyle: CalendarStyle;
    currentDate: Date;
    currentMonth: number;
    currentYear: number;
    monthYear: string;
    startDay: number;
    endDay: number;
    datesElement: any;
    prevBtnDisabled: boolean;
    disableNextBtn: boolean;
    currentSelectedDate: any;
    currentSelectedMonth: number;
    currentSelectedDay: number;
    currentSelectedYear: number;
    reRenderCount: number;
    maxYear: number;
    maxMonth: number;
    maxDay: number;
    minYear: number;
    minMonth: number;
    minDay: number;
    month: number;
    day: number;
    year: number;
    constructor();
    requestUpdate(name?: PropertyKey, oldValue?: unknown, options?: PropertyDeclaration<unknown, unknown>): void;
    connectedCallback(): void;
    generateCalendar(month: number, year: number): void;
    goToPreviousMonth: () => false | undefined;
    goToNextMonth: () => false | undefined;
    static styles: import("lit").CSSResult[];
    isPreviousBtnDisabled: () => boolean;
    isNextBtnDisabled: () => boolean;
    render(): import("lit-html").TemplateResult<1>;
    formatDate(day: any, month: any, year: any): string;
    formatDateToString(day: any, month: any, year: any): string;
    onDateClick: (event: any) => void;
    monthYearStyles(): {
        font: string | undefined;
        color: string | undefined;
    };
    daysStyles(): {
        font: string | undefined;
        color: string | undefined;
    };
    titleStyles(): {
        font: string | undefined;
        color: string | undefined;
    };
    timezoneStyles(): {
        font: string;
        color: string;
    };
    timezoneTextStyles(): {
        font: string;
        color: string;
    };
    calendarStyles(): {
        height: string | undefined;
        width: string | undefined;
        borderRadius: string | undefined;
        background: string | undefined;
    };
    dateStyles(day: number, month: number, year: number, disabled?: Boolean): {
        background: string;
        color: string | undefined;
        pointerEvents?: string | undefined;
        border: string | undefined;
        margin: string;
        font: string | undefined;
    };
    getArrowButtonStyle(): {
        font: string;
        color: string;
    };
}
declare global {
    namespace JSX {
        interface IntrinsicElements {
            'cometchat-calendar': CometChatCalendar;
        }
    }
    interface TagNameMap {
        'cometchat-calendar': CometChatCalendar;
    }
}
//# sourceMappingURL=cometchat-calendar.d.ts.map