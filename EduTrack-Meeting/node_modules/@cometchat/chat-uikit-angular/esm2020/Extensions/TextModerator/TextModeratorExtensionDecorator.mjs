import { CometChatUIKitConstants } from "@cometchat/uikit-resources";
import { CometChatUIKitUtility } from '@cometchat/uikit-shared';
import { DataSourceDecorator } from "../../Shared/Framework/DataSourceDecorator";
export class TextModeratorExtensionDecorator extends DataSourceDecorator {
    constructor(dataSource) {
        super(dataSource);
    }
    getId() {
        return "textmoderator";
    }
    getModeratedtext(message) {
        let text = CometChatUIKitUtility.getExtensionData(message);
        if (text?.trim()?.length > 0) {
            return text;
        }
        else {
            return message.getText();
        }
    }
    getLastConversationMessage(conversation, loggedInUser) {
        const message = conversation.getLastMessage();
        if (message && !message.getDeletedAt() &&
            message.getType() === CometChatUIKitConstants.MessageTypes.text &&
            message.getCategory() === CometChatUIKitConstants.MessageCategory.message) {
            return this.getModeratedtext(message);
        }
        else {
            return super.getLastConversationMessage(conversation, loggedInUser);
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGV4dE1vZGVyYXRvckV4dGVuc2lvbkRlY29yYXRvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2NoYXQtdWlraXQtYW5ndWxhci9zcmMvRXh0ZW5zaW9ucy9UZXh0TW9kZXJhdG9yL1RleHRNb2RlcmF0b3JFeHRlbnNpb25EZWNvcmF0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDckUsT0FBTyxFQUFDLHFCQUFxQixFQUFDLE1BQU0seUJBQXlCLENBQUE7QUFFN0QsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sNENBQTRDLENBQUM7QUFDakYsTUFBTSxPQUFPLCtCQUFnQyxTQUFRLG1CQUFtQjtJQUN0RSxZQUFZLFVBQXFCO1FBQy9CLEtBQUssQ0FBQyxVQUFVLENBQUMsQ0FBQTtJQUNuQixDQUFDO0lBRVEsS0FBSztRQUNaLE9BQU8sZUFBZSxDQUFDO0lBQ3pCLENBQUM7SUFDRCxnQkFBZ0IsQ0FBQyxPQUE2QjtRQUM1QyxJQUFJLElBQUksR0FBVSxxQkFBcUIsQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLENBQUMsQ0FBQTtRQUNqRSxJQUFHLElBQUksRUFBRSxJQUFJLEVBQUUsRUFBRSxNQUFNLEdBQUcsQ0FBQyxFQUFDO1lBQzFCLE9BQU8sSUFBSSxDQUFBO1NBQ1o7YUFDRztZQUNGLE9BQU8sT0FBTyxDQUFDLE9BQU8sRUFBRSxDQUFBO1NBQ3pCO0lBQ0gsQ0FBQztJQUNRLDBCQUEwQixDQUNqQyxZQUFvQyxFQUNwQyxZQUEyQjtRQUUzQixNQUFNLE9BQU8sR0FBeUIsWUFBWSxDQUFDLGNBQWMsRUFBRSxDQUFDO1FBQ3BFLElBQ0UsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLFlBQVksRUFBRTtZQUNsQyxPQUFPLENBQUMsT0FBTyxFQUFFLEtBQUssdUJBQXVCLENBQUMsWUFBWSxDQUFDLElBQUk7WUFDL0QsT0FBTyxDQUFDLFdBQVcsRUFBRSxLQUFLLHVCQUF1QixDQUFDLGVBQWUsQ0FBQyxPQUFPLEVBQ3pFO1lBQ0EsT0FBTyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxDQUFDLENBQUM7U0FDdkM7YUFBTTtZQUNMLE9BQU8sS0FBSyxDQUFDLDBCQUEwQixDQUFDLFlBQVksRUFBQyxZQUFZLENBQUMsQ0FBQztTQUNwRTtJQUNILENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbWV0Q2hhdCB9IGZyb20gXCJAY29tZXRjaGF0L2NoYXQtc2RrLWphdmFzY3JpcHRcIjtcbmltcG9ydCB7IENvbWV0Q2hhdFVJS2l0Q29uc3RhbnRzIH0gZnJvbSBcIkBjb21ldGNoYXQvdWlraXQtcmVzb3VyY2VzXCI7XG5pbXBvcnQge0NvbWV0Q2hhdFVJS2l0VXRpbGl0eX0gZnJvbSAnQGNvbWV0Y2hhdC91aWtpdC1zaGFyZWQnXG5pbXBvcnQgeyBEYXRhU291cmNlIH0gZnJvbSBcIi4uLy4uL1NoYXJlZC9GcmFtZXdvcmsvRGF0YVNvdXJjZVwiO1xuaW1wb3J0IHsgRGF0YVNvdXJjZURlY29yYXRvciB9IGZyb20gXCIuLi8uLi9TaGFyZWQvRnJhbWV3b3JrL0RhdGFTb3VyY2VEZWNvcmF0b3JcIjtcbmV4cG9ydCBjbGFzcyBUZXh0TW9kZXJhdG9yRXh0ZW5zaW9uRGVjb3JhdG9yIGV4dGVuZHMgRGF0YVNvdXJjZURlY29yYXRvciB7XG4gIGNvbnN0cnVjdG9yKGRhdGFTb3VyY2U6RGF0YVNvdXJjZSl7XG4gICAgc3VwZXIoZGF0YVNvdXJjZSlcbiAgfVxuXG4gIG92ZXJyaWRlIGdldElkKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIFwidGV4dG1vZGVyYXRvclwiO1xuICB9XG4gIGdldE1vZGVyYXRlZHRleHQobWVzc2FnZTpDb21ldENoYXQuVGV4dE1lc3NhZ2UpOnN0cmluZ3tcbiAgICBsZXQgdGV4dDpzdHJpbmcgPSBDb21ldENoYXRVSUtpdFV0aWxpdHkuZ2V0RXh0ZW5zaW9uRGF0YShtZXNzYWdlKVxuICAgIGlmKHRleHQ/LnRyaW0oKT8ubGVuZ3RoID4gMCl7XG4gICAgICByZXR1cm4gdGV4dFxuICAgIH1cbiAgICBlbHNle1xuICAgICAgcmV0dXJuIG1lc3NhZ2UuZ2V0VGV4dCgpXG4gICAgfVxuICB9XG4gIG92ZXJyaWRlIGdldExhc3RDb252ZXJzYXRpb25NZXNzYWdlKFxuICAgIGNvbnZlcnNhdGlvbjogQ29tZXRDaGF0LkNvbnZlcnNhdGlvbixcbiAgICBsb2dnZWRJblVzZXI6Q29tZXRDaGF0LlVzZXJcbiAgKTogc3RyaW5nIHtcbiAgICBjb25zdCBtZXNzYWdlOkNvbWV0Q2hhdC5UZXh0TWVzc2FnZSA9IGNvbnZlcnNhdGlvbi5nZXRMYXN0TWVzc2FnZSgpO1xuICAgIGlmIChcbiAgICAgIG1lc3NhZ2UgJiYgIW1lc3NhZ2UuZ2V0RGVsZXRlZEF0KCkgJiZcbiAgICAgIG1lc3NhZ2UuZ2V0VHlwZSgpID09PSBDb21ldENoYXRVSUtpdENvbnN0YW50cy5NZXNzYWdlVHlwZXMudGV4dCAmJlxuICAgICAgbWVzc2FnZS5nZXRDYXRlZ29yeSgpID09PSBDb21ldENoYXRVSUtpdENvbnN0YW50cy5NZXNzYWdlQ2F0ZWdvcnkubWVzc2FnZVxuICAgICkge1xuICAgICAgcmV0dXJuIHRoaXMuZ2V0TW9kZXJhdGVkdGV4dChtZXNzYWdlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHN1cGVyLmdldExhc3RDb252ZXJzYXRpb25NZXNzYWdlKGNvbnZlcnNhdGlvbixsb2dnZWRJblVzZXIpO1xuICAgIH1cbiAgfVxufVxuIl19