import { CometChatMessageOption, CometChatUIKitConstants, localize, fontHelper } from "@cometchat/uikit-resources";
import { DataSourceDecorator } from "../../Shared/Framework/DataSourceDecorator";
export class ReactionExtensionDecorator extends DataSourceDecorator {
    constructor(dataSource) {
        super(dataSource);
    }
    getCommonOptions(loggedInUser, messageObject, theme, group) {
        let options = super.getCommonOptions(loggedInUser, messageObject, theme, group);
        if (!this.checkIfOptionExist(options, CometChatUIKitConstants.MessageOption.reactToMessage)) {
            let newOption = new CometChatMessageOption({
                id: CometChatUIKitConstants.MessageOption.reactToMessage,
                title: localize("ADD_REACTION"),
                iconURL: "assets/Reactionsicon.svg",
                onClick: null,
                iconTint: theme.palette.getAccent600(),
                backgroundColor: "transparent",
                titleFont: fontHelper(theme.typography.subtitle1),
                titleColor: theme.palette.getAccent600()
            });
            options.push(newOption);
        }
        return options;
    }
    checkIfOptionExist(template, id) {
        return template.some(obj => obj.id === id);
    }
    getId() {
        return "reactions";
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVhY3Rpb25FeHRlbnNpb25EZWNvcmF0b3IuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jaGF0LXVpa2l0LWFuZ3VsYXIvc3JjL0V4dGVuc2lvbnMvUmVhY3Rpb25zL1JlYWN0aW9uRXh0ZW5zaW9uRGVjb3JhdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBa0Isc0JBQXNCLEVBQUUsdUJBQXVCLEVBQUUsUUFBUSxFQUFFLFVBQVUsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBRW5JLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLDRDQUE0QyxDQUFDO0FBQ2pGLE1BQU0sT0FBTywwQkFBMkIsU0FBUSxtQkFBbUI7SUFDakUsWUFBWSxVQUFxQjtRQUMvQixLQUFLLENBQUMsVUFBVSxDQUFDLENBQUE7SUFDbkIsQ0FBQztJQUNlLGdCQUFnQixDQUFDLFlBQTRCLEVBQUUsYUFBb0MsRUFBRSxLQUFxQixFQUFFLEtBQXVCO1FBQ2pKLElBQUksT0FBTyxHQUE0QixLQUFLLENBQUMsZ0JBQWdCLENBQUMsWUFBWSxFQUFDLGFBQWEsRUFBQyxLQUFLLEVBQUMsS0FBSyxDQUFDLENBQUE7UUFDckcsSUFBRyxDQUFDLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxPQUFPLEVBQUUsdUJBQXVCLENBQUMsYUFBYSxDQUFDLGNBQWMsQ0FBQyxFQUFDO1lBQzFGLElBQUksU0FBUyxHQUEwQixJQUFJLHNCQUFzQixDQUFDO2dCQUNoRSxFQUFFLEVBQUMsdUJBQXVCLENBQUMsYUFBYSxDQUFDLGNBQWM7Z0JBQ3ZELEtBQUssRUFBQyxRQUFRLENBQUMsY0FBYyxDQUFDO2dCQUM5QixPQUFPLEVBQUUsMEJBQTBCO2dCQUNuQyxPQUFPLEVBQUUsSUFBSTtnQkFDYixRQUFRLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxZQUFZLEVBQUU7Z0JBQ3RDLGVBQWUsRUFBRSxhQUFhO2dCQUM5QixTQUFTLEVBQUUsVUFBVSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUFDO2dCQUNqRCxVQUFVLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxZQUFZLEVBQUU7YUFDekMsQ0FBQyxDQUFBO1lBQ0YsT0FBTyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQTtTQUV2QjtRQUdDLE9BQU8sT0FBTyxDQUFBO0lBQ2xCLENBQUM7SUFDRCxrQkFBa0IsQ0FBQyxRQUFpQyxFQUFFLEVBQVM7UUFDMUQsT0FBTyxRQUFRLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQTtJQUM1QyxDQUFDO0lBQ0ssS0FBSztRQUNaLE9BQU8sV0FBVyxDQUFDO0lBQ3JCLENBQUM7Q0FFRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbWV0Q2hhdCB9IGZyb20gXCJAY29tZXRjaGF0L2NoYXQtc2RrLWphdmFzY3JpcHRcIjtcbmltcG9ydCB7IENvbWV0Q2hhdFRoZW1lLCBDb21ldENoYXRNZXNzYWdlT3B0aW9uLCBDb21ldENoYXRVSUtpdENvbnN0YW50cywgbG9jYWxpemUsIGZvbnRIZWxwZXIgfSBmcm9tIFwiQGNvbWV0Y2hhdC91aWtpdC1yZXNvdXJjZXNcIjtcbmltcG9ydCB7IERhdGFTb3VyY2UgfSBmcm9tIFwiLi4vLi4vU2hhcmVkL0ZyYW1ld29yay9EYXRhU291cmNlXCI7XG5pbXBvcnQgeyBEYXRhU291cmNlRGVjb3JhdG9yIH0gZnJvbSBcIi4uLy4uL1NoYXJlZC9GcmFtZXdvcmsvRGF0YVNvdXJjZURlY29yYXRvclwiO1xuZXhwb3J0IGNsYXNzIFJlYWN0aW9uRXh0ZW5zaW9uRGVjb3JhdG9yIGV4dGVuZHMgRGF0YVNvdXJjZURlY29yYXRvciB7XG4gIGNvbnN0cnVjdG9yKGRhdGFTb3VyY2U6RGF0YVNvdXJjZSl7XG4gICAgc3VwZXIoZGF0YVNvdXJjZSlcbiAgfVxuICBwdWJsaWMgb3ZlcnJpZGUgZ2V0Q29tbW9uT3B0aW9ucyhsb2dnZWRJblVzZXI6IENvbWV0Q2hhdC5Vc2VyLCBtZXNzYWdlT2JqZWN0OiBDb21ldENoYXQuQmFzZU1lc3NhZ2UsIHRoZW1lOiBDb21ldENoYXRUaGVtZSwgZ3JvdXA/OiBDb21ldENoYXQuR3JvdXApOiBDb21ldENoYXRNZXNzYWdlT3B0aW9uW10ge1xuICAgIGxldCBvcHRpb25zOkNvbWV0Q2hhdE1lc3NhZ2VPcHRpb25bXSA9IHN1cGVyLmdldENvbW1vbk9wdGlvbnMobG9nZ2VkSW5Vc2VyLG1lc3NhZ2VPYmplY3QsdGhlbWUsZ3JvdXApXG4gICAgaWYoIXRoaXMuY2hlY2tJZk9wdGlvbkV4aXN0KG9wdGlvbnMsIENvbWV0Q2hhdFVJS2l0Q29uc3RhbnRzLk1lc3NhZ2VPcHRpb24ucmVhY3RUb01lc3NhZ2UpKXtcbiAgICAgbGV0IG5ld09wdGlvbjpDb21ldENoYXRNZXNzYWdlT3B0aW9uID0gbmV3IENvbWV0Q2hhdE1lc3NhZ2VPcHRpb24oe1xuICAgICAgIGlkOkNvbWV0Q2hhdFVJS2l0Q29uc3RhbnRzLk1lc3NhZ2VPcHRpb24ucmVhY3RUb01lc3NhZ2UsXG4gICAgICAgdGl0bGU6bG9jYWxpemUoXCJBRERfUkVBQ1RJT05cIiksXG4gICAgICAgaWNvblVSTDogXCJhc3NldHMvUmVhY3Rpb25zaWNvbi5zdmdcIixcbiAgICAgICBvbkNsaWNrOiBudWxsLFxuICAgICAgIGljb25UaW50OiB0aGVtZS5wYWxldHRlLmdldEFjY2VudDYwMCgpLFxuICAgICAgIGJhY2tncm91bmRDb2xvcjogXCJ0cmFuc3BhcmVudFwiLFxuICAgICAgIHRpdGxlRm9udDogZm9udEhlbHBlcih0aGVtZS50eXBvZ3JhcGh5LnN1YnRpdGxlMSksXG4gICAgICAgdGl0bGVDb2xvcjogdGhlbWUucGFsZXR0ZS5nZXRBY2NlbnQ2MDAoKVxuICAgICB9KVxuICAgICBvcHRpb25zLnB1c2gobmV3T3B0aW9uKVxuXG4gICAgfVxuXG5cbiAgICAgIHJldHVybiBvcHRpb25zXG4gIH1cbiAgY2hlY2tJZk9wdGlvbkV4aXN0KHRlbXBsYXRlOkNvbWV0Q2hhdE1lc3NhZ2VPcHRpb25bXSwgaWQ6c3RyaW5nKTpib29sZWFue1xuICAgICAgIHJldHVybiB0ZW1wbGF0ZS5zb21lKG9iaiA9PiBvYmouaWQgPT09IGlkKVxuICAgICB9XG4gIG92ZXJyaWRlIGdldElkKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIFwicmVhY3Rpb25zXCI7XG4gIH1cblxufVxuIl19