import { Component, Input, ChangeDetectionStrategy, } from "@angular/core";
import { CometChat } from "@cometchat/chat-sdk-javascript";
import { fontHelper, localize, CometChatUIKitConstants, } from "@cometchat/uikit-resources";
import "@cometchat/uikit-elements";
import { CallLogDetailsConfiguration, CallLogsConfiguration, WithDetailsStyle, } from "@cometchat/uikit-shared";
import * as i0 from "@angular/core";
import * as i1 from "../../../CometChatTheme.service";
import * as i2 from "../../CometChatCallLogs/cometchat-call-logs/cometchat-call-logs.component";
import * as i3 from "../../CometChatCallLogDetails/cometchat-call-log-details/cometchat-call-log-details.component";
import * as i4 from "@angular/common";
export class CometChatCallLogsWithDetailsComponent {
    constructor(elementRef, ref, themeService) {
        this.elementRef = elementRef;
        this.ref = ref;
        this.themeService = themeService;
        this.isMobileView = false;
        this.messageText = localize("NO_CALLS_SELECTED");
        this.withDetailsStyle = {};
        this.showMoreInfo = true;
        this.backdropStyle = {};
        this.callLogDetailsConfiguration = new CallLogDetailsConfiguration({});
        this.callLogConfiguration = new CallLogsConfiguration({});
        this.onError = (error) => {
            console.log(error);
        };
        this.computedCallLogDetailsConfig = new CallLogDetailsConfiguration({});
        this.labelStyle = {
            background: "transparent",
            textFont: "700 22px Inter",
            textColor: "rgba(20, 20, 20, 0.33)",
        };
        this.onBackClick = () => {
            this.user = null;
            this.group = null;
            this.activeCall = null;
        };
        this.onInfoClick = (call) => {
            this.call = call;
            this.setActiveCallLog();
        };
        this.emptyMessageStyle = () => {
            return {
                background: this.withDetailsStyle.background ||
                    this.themeService.theme.palette.getBackground(),
                height: this.withDetailsStyle.height,
                width: `calc(${this.withDetailsStyle.width} - 280px)`,
                border: this.withDetailsStyle.border,
                borderRadius: this.withDetailsStyle.borderRadius,
            };
        };
        this.chatsWrapperStyles = () => {
            return {
                height: this.withDetailsStyle.height,
                width: this.withDetailsStyle.width,
                border: this.withDetailsStyle.border,
                borderRadius: this.withDetailsStyle.borderRadius,
                background: this.withDetailsStyle.background ||
                    this.themeService.theme.palette.getBackground(),
            };
        };
    }
    ngOnChanges(changes) {
        if (changes["user"] || changes["group"]) {
            this.setActiveCallLog();
        }
        if (changes["isMobileView"]) {
            if (this.isMobileView) {
                this.backdropStyle.height = "100%";
                this.backdropStyle.width = "100%";
                this.computedCallLogDetailsConfig =
                    this.computedCallLogDetailsConfiguration();
            }
            else if (!this.isMobileView) {
                this.backdropStyle.height = "100%";
                this.backdropStyle.width = "100%";
                this.computedCallLogDetailsConfig =
                    this.computedCallLogDetailsConfiguration();
            }
            setTimeout(() => {
                this.updateBackdropHeight();
            }, 100);
        }
    }
    updateBackdropHeight() {
        const divHeight = this.elementRef.nativeElement.offsetHeight;
        const divWidth = this.elementRef.nativeElement.offsetWidth;
        this.backdropStyle = {
            height: divHeight + "px",
            width: divWidth + "px",
            background: "rgba(0, 0, 0, 0.5)",
            position: "fixed",
        };
        if (this.isMobileView) {
            this.backdropStyle.height = divHeight + "px";
            this.backdropStyle.width = divWidth + "px";
        }
        else {
            this.backdropStyle.height = divHeight + "px";
            this.backdropStyle.width = divWidth + "px";
        }
        this.backdropStyle.height = divHeight + "px";
        this.backdropStyle.width = divWidth + "px";
    }
    setWithDetailsStyle() {
        let defaultStyle = new WithDetailsStyle({
            width: "100%",
            height: "100%",
            background: this.themeService.theme.palette.getBackground(),
            borderRadius: "none",
            border: "none",
            messageTextColor: this.themeService.theme.palette.getAccent600(),
            messageTextFont: fontHelper(this.themeService.theme.typography.title1),
        });
        this.withDetailsStyle = {
            ...defaultStyle,
            ...this.withDetailsStyle,
        };
        this.labelStyle.textFont = this.withDetailsStyle.messageTextFont;
        this.labelStyle.textColor = this.withDetailsStyle.messageTextColor;
    }
    setActiveCallLog() {
        this.activeCall = this.call;
        if (this.call.getInitiator().getUid() == this.loggedInUser?.getUid()) {
            if (this.call.getReceiverType() ==
                CometChatUIKitConstants.MessageReceiverType.user) {
                this.user = this.call.getReceiver();
                this.group = null;
            }
            else {
                this.user = null;
                this.group = this.call.getReceiver();
            }
        }
        else {
            this.user = this.call.getInitiator();
        }
    }
    ngOnInit() {
        this.computedCallLogDetailsConfig =
            this.computedCallLogDetailsConfiguration();
        this.updateBackdropHeight();
        this.setWithDetailsStyle();
        CometChat.getLoggedinUser()
            .then((user) => {
            this.loggedInUser = user;
        })
            .catch((error) => {
            if (this.onError) {
                this.onError(error);
            }
        });
    }
    computedCallLogDetailsConfiguration() {
        const config = new CallLogDetailsConfiguration({});
        Object.assign(config, this.callLogDetailsConfiguration);
        config.callLogDetailsStyle = {
            ...config.callLogDetailsStyle,
            border: `1px solid ${this.themeService.theme.palette?.getAccent100()}`,
        };
        if (this.isMobileView)
            config.onBackClick = () => {
                this.activeCall = null;
                this.user = null;
                this.group = null;
            };
        return config;
    }
}
CometChatCallLogsWithDetailsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.11", ngImport: i0, type: CometChatCallLogsWithDetailsComponent, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.CometChatThemeService }], target: i0.ɵɵFactoryTarget.Component });
CometChatCallLogsWithDetailsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.11", type: CometChatCallLogsWithDetailsComponent, selector: "cometchat-call-logs-with-details", inputs: { isMobileView: "isMobileView", messageText: "messageText", withDetailsStyle: "withDetailsStyle", showMoreInfo: "showMoreInfo", backdropStyle: "backdropStyle", call: "call", callLogDetailsConfiguration: "callLogDetailsConfiguration", callLogConfiguration: "callLogConfiguration", onError: "onError" }, usesOnChanges: true, ngImport: i0, template: "<div class=\"cc-with-details__wrapper\" [ngStyle]=\"chatsWrapperStyles()\">\n  <div class=\"cc-with-details__sidebar\" [ngClass]=\"{mobile : isMobileView}\">\n    <cometchat-call-logs [activeCall]=\"activeCall\" [showMoreInfo]=\"showMoreInfo\" [backdropStyle]=\"backdropStyle\"\n      [activeCall]=\"activeCall\" [titleAlignment]=\"callLogConfiguration?.titleAlignment!\"\n      [emptyStateView]=\"callLogConfiguration.emptyStateView\" \n      [errorStateView]=\"callLogConfiguration.errorStateView\"\n      [subtitleView]=\"callLogConfiguration.subtitleView\" \n      [listItemView]=\"callLogConfiguration.listItemView\" \n      [tailView]=\"callLogConfiguration.tailView\" \n      [loadingIconURL]=\"callLogConfiguration.loadingIconURL\" [loadingStateView]=\"callLogConfiguration.loadingStateView\"\n      [callLogRequestBuilder]=\"callLogConfiguration.callLogRequestBuilder\"\n      [onItemClick]=\"callLogConfiguration.onItemClick!\" [onInfoClick]=\"callLogConfiguration.onInfoClick || onInfoClick! \"\n      [onError]=\"callLogConfiguration.onError!\" [listItemStyle]=\"callLogConfiguration.listItemStyle\"\n      [infoIconUrl]=\"callLogConfiguration.infoIconUrl\" [datePattern]=\"callLogConfiguration.datePattern\"\n      [dateSeparatorPattern]=\"callLogConfiguration.dateSeparatorPattern\"\n      [incomingAudioCallIconUrl]=\"callLogConfiguration.incomingAudioCallIconUrl\"\n      [incomingVideoCallIconUrl]=\"callLogConfiguration.incomingVideoCallIconUrl\"\n      [outgoingAudioCallIconUrl]=\"callLogConfiguration.outgoingAudioCallIconUrl\"\n      [outgoingVideoCallIconUrl]=\"callLogConfiguration.outgoingVideoCallIconUrl\"\n      [missedAudioCallIconUrl]=\"callLogConfiguration.missedAudioCallIconUrl\"\n      [missedVideoCallIconUrl]=\"callLogConfiguration.missedVideoCallIconUrl\"\n      [callLogsStyle]=\"callLogConfiguration.callLogsStyle\" [avatarStyle]=\"callLogConfiguration.avatarStyle\"\n      [hideSeparator]=\"callLogConfiguration.hideSeparator\"\n      [outgoingCallConfiguration]=\"callLogConfiguration.outgoingCallConfiguration\"></cometchat-call-logs>\n  </div>\n  <div class=\"cc-with-details__main\" [ngClass]=\"{mobile : isMobileView}\" *ngIf=\"activeCall && (user || group)\">\n    <!--call details Screen-->\n    <cometchat-call-log-details [user]=\"user!\" [group]=\"group!\" [call]=\"call\"\n      [backIconUrl]=\"computedCallLogDetailsConfig.backIconUrl\" [avatarStyle]=\"computedCallLogDetailsConfig.avatarStyle\"\n      [onBackClick]=\"computedCallLogDetailsConfig.onBackClick!\"\n      [callLogHistoryConfiguration]=\"computedCallLogDetailsConfig.callLogHistoryConfiguration\"\n      [callLogParticipantsConfiguration]=\"computedCallLogDetailsConfig.callLogParticipantsConfiguration\"\n      [callLogRecordingsConfiguration]=\"computedCallLogDetailsConfig.callLogRecordingsConfiguration\"\n      [callLogDetailStyle]=\"computedCallLogDetailsConfig.callLogDetailsStyle\">\n    </cometchat-call-log-details>\n  </div>\n\n  <div class=\"cc-decorator__message--empty\" *ngIf=\"!user && !group\" [ngStyle]=\"emptyMessageStyle()\">\n    <cometchat-label [text]=\"messageText\" [labelStyle]=\"labelStyle\"></cometchat-label>\n  </div>", styles: [".cc-with-details__wrapper{display:flex;height:100%;width:100%;box-sizing:border-box}.cc-with-details__sidebar{width:280px;height:100%;position:relative}.cc-with-details__main{width:calc(100% - 280px);height:100%}.mobile{width:100%!important;height:100%;position:absolute}.cc-decorator__message--empty{display:flex;justify-content:center;align-items:center}\n"], components: [{ type: i2.CometchatCallLogsComponent, selector: "cometchat-call-logs", inputs: ["title", "titleAlignment", "listItemView", "subtitleView", "tailView", "menu", "emptyStateView", "errorStateView", "emptyStateText", "errorStateText", "loadingStateView", "loadingIconURL", "infoIconUrl", "missedAudioCallIconUrl", "missedVideoCallIconUrl", "outgoingAudioCallIconUrl", "outgoingVideoCallIconUrl", "incomingAudioCallIconUrl", "incomingVideoCallIconUrl", "callLogRequestBuilder", "cometchatCallObject", "onItemClick", "onInfoClick", "onError", "activeCall", "datePattern", "DateSeparatorPattern", "callLogsStyle", "avatarStyle", "hideSeparator", "dateSeparatorStyle", "outgoingCallConfiguration", "hideError", "showSectionHeader", "showMoreInfo", "sectionHeaderField", "backdropStyle", "dateStyle", "listItemStyle", "ongoingCallConfiguration"] }, { type: i3.CometChatCallLogDetailsComponent, selector: "cometchat-call-log-details", inputs: ["call", "group", "user", "title", "onBackClick", "hideProfile", "subtitleView", "customProfileView", "backIconUrl", "greaterThanIconURL", "callButtonsConfiguration", "callLogParticipantsConfiguration", "callLogHistoryConfiguration", "callLogRecordingsConfiguration", "onError", "datePattern", "datePattern2", "data", "avatarStyle", "callDetailsStyle", "listItemStyle", "dateStyle", "callButtonsStyle"] }], directives: [{ type: i4.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }, { type: i4.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.11", ngImport: i0, type: CometChatCallLogsWithDetailsComponent, decorators: [{
            type: Component,
            args: [{ selector: "cometchat-call-logs-with-details", changeDetection: ChangeDetectionStrategy.OnPush, template: "<div class=\"cc-with-details__wrapper\" [ngStyle]=\"chatsWrapperStyles()\">\n  <div class=\"cc-with-details__sidebar\" [ngClass]=\"{mobile : isMobileView}\">\n    <cometchat-call-logs [activeCall]=\"activeCall\" [showMoreInfo]=\"showMoreInfo\" [backdropStyle]=\"backdropStyle\"\n      [activeCall]=\"activeCall\" [titleAlignment]=\"callLogConfiguration?.titleAlignment!\"\n      [emptyStateView]=\"callLogConfiguration.emptyStateView\" \n      [errorStateView]=\"callLogConfiguration.errorStateView\"\n      [subtitleView]=\"callLogConfiguration.subtitleView\" \n      [listItemView]=\"callLogConfiguration.listItemView\" \n      [tailView]=\"callLogConfiguration.tailView\" \n      [loadingIconURL]=\"callLogConfiguration.loadingIconURL\" [loadingStateView]=\"callLogConfiguration.loadingStateView\"\n      [callLogRequestBuilder]=\"callLogConfiguration.callLogRequestBuilder\"\n      [onItemClick]=\"callLogConfiguration.onItemClick!\" [onInfoClick]=\"callLogConfiguration.onInfoClick || onInfoClick! \"\n      [onError]=\"callLogConfiguration.onError!\" [listItemStyle]=\"callLogConfiguration.listItemStyle\"\n      [infoIconUrl]=\"callLogConfiguration.infoIconUrl\" [datePattern]=\"callLogConfiguration.datePattern\"\n      [dateSeparatorPattern]=\"callLogConfiguration.dateSeparatorPattern\"\n      [incomingAudioCallIconUrl]=\"callLogConfiguration.incomingAudioCallIconUrl\"\n      [incomingVideoCallIconUrl]=\"callLogConfiguration.incomingVideoCallIconUrl\"\n      [outgoingAudioCallIconUrl]=\"callLogConfiguration.outgoingAudioCallIconUrl\"\n      [outgoingVideoCallIconUrl]=\"callLogConfiguration.outgoingVideoCallIconUrl\"\n      [missedAudioCallIconUrl]=\"callLogConfiguration.missedAudioCallIconUrl\"\n      [missedVideoCallIconUrl]=\"callLogConfiguration.missedVideoCallIconUrl\"\n      [callLogsStyle]=\"callLogConfiguration.callLogsStyle\" [avatarStyle]=\"callLogConfiguration.avatarStyle\"\n      [hideSeparator]=\"callLogConfiguration.hideSeparator\"\n      [outgoingCallConfiguration]=\"callLogConfiguration.outgoingCallConfiguration\"></cometchat-call-logs>\n  </div>\n  <div class=\"cc-with-details__main\" [ngClass]=\"{mobile : isMobileView}\" *ngIf=\"activeCall && (user || group)\">\n    <!--call details Screen-->\n    <cometchat-call-log-details [user]=\"user!\" [group]=\"group!\" [call]=\"call\"\n      [backIconUrl]=\"computedCallLogDetailsConfig.backIconUrl\" [avatarStyle]=\"computedCallLogDetailsConfig.avatarStyle\"\n      [onBackClick]=\"computedCallLogDetailsConfig.onBackClick!\"\n      [callLogHistoryConfiguration]=\"computedCallLogDetailsConfig.callLogHistoryConfiguration\"\n      [callLogParticipantsConfiguration]=\"computedCallLogDetailsConfig.callLogParticipantsConfiguration\"\n      [callLogRecordingsConfiguration]=\"computedCallLogDetailsConfig.callLogRecordingsConfiguration\"\n      [callLogDetailStyle]=\"computedCallLogDetailsConfig.callLogDetailsStyle\">\n    </cometchat-call-log-details>\n  </div>\n\n  <div class=\"cc-decorator__message--empty\" *ngIf=\"!user && !group\" [ngStyle]=\"emptyMessageStyle()\">\n    <cometchat-label [text]=\"messageText\" [labelStyle]=\"labelStyle\"></cometchat-label>\n  </div>", styles: [".cc-with-details__wrapper{display:flex;height:100%;width:100%;box-sizing:border-box}.cc-with-details__sidebar{width:280px;height:100%;position:relative}.cc-with-details__main{width:calc(100% - 280px);height:100%}.mobile{width:100%!important;height:100%;position:absolute}.cc-decorator__message--empty{display:flex;justify-content:center;align-items:center}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.CometChatThemeService }]; }, propDecorators: { isMobileView: [{
                type: Input
            }], messageText: [{
                type: Input
            }], withDetailsStyle: [{
                type: Input
            }], showMoreInfo: [{
                type: Input
            }], backdropStyle: [{
                type: Input
            }], call: [{
                type: Input
            }], callLogDetailsConfiguration: [{
                type: Input
            }], callLogConfiguration: [{
                type: Input
            }], onError: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,