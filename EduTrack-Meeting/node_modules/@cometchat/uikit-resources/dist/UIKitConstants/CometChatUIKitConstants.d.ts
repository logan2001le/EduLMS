export declare class CometChatUIKitConstants {
    static MessageCategory: Readonly<{
        message: string;
        custom: string;
        action: string;
        call: string;
        interactive: string;
    }>;
    static MessageTypes: Readonly<{
        text: string;
        file: string;
        image: string;
        audio: string;
        video: string;
        delete: "delete";
        edited: "edited";
        groupMember: "groupMember";
        form: "form";
        card: "card";
        customInteractive: "customInteractive";
        scheduler: "scheduler";
    }>;
    static groupMemberAction: Readonly<{
        ROLE: "role";
        BLOCK: "block";
        REMOVE: "remove";
        JOINED: string;
        LEFT: string;
        ADDED: string;
        BANNED: string;
        UNBANNED: string;
        KICKED: string;
        INVITED: string;
        SCOPE_CHANGE: string;
    }>;
    static MessageReceiverType: Readonly<{
        user: string;
        group: string;
    }>;
    static userStatusType: Readonly<{
        online: string;
        offline: string;
    }>;
    static MessageOption: Readonly<{
        editMessage: "edit";
        deleteMessage: "delete";
        replyMessage: "reply";
        replyInThread: "replyInThread";
        translateMessage: "translate";
        reactToMessage: "react";
        messageInformation: "messageInformation";
        copyMessage: "copy";
        shareMessage: "share";
        forwardMessage: "forward";
        sendMessagePrivately: "sendMessagePrivately";
        replyMessagePrivately: "replyMessagePrivately";
    }>;
    static GroupOptions: Readonly<{
        leave: "leave";
        delete: "delete";
        viewMembers: "viewMembers";
        addMembers: "addMembers";
        bannedMembers: "bannedMembers";
    }>;
    static GroupMemberOptions: Readonly<{
        kick: "kick";
        ban: "ban";
        unban: "unban";
        changeScope: "changeScope";
    }>;
    static groupMemberScope: Readonly<{
        owner: "owner";
        admin: string;
        participant: string;
        moderator: string;
    }>;
    static UserOptions: Readonly<{
        block: "block";
        unblock: "unblock";
        viewProfile: "viewProfile";
    }>;
    static ConversationOptions: Readonly<{
        delete: "delete";
    }>;
    static GroupTypes: Readonly<{
        private: string;
        password: string;
        public: string;
    }>;
    static liveReaction: Readonly<{
        timeout: 1500;
    }>;
    static messages: Readonly<{
        MESSAGE_DELIVERED: "onMessagesDelivered";
        MESSAGE_READ: "onMessagesRead";
        MESSAGE_DELETED: "onMessageDeleted";
        MESSAGE_EDITED: "onMessageEdited";
        MESSAGE_SENT: "messageSent";
        TEXT_MESSAGE_RECEIVED: "onTextMessageReceived";
        MEDIA_MESSAGE_RECEIVED: "onMediaMessageReceived";
        CUSTOM_MESSAGE_RECEIVED: "onCustomMessageReceived";
        TRANSIENT_MESSAGE_RECEIVED: "onTransientMessageReceived";
        INTERACTIVE_MESSAGE_RECEIVED: "onInteractiveMessageReceived";
        INTERACTION_GOAL_COMPLETED: "onInteractionGoalCompleted";
        DELIVERY: "delivery";
        READ: "read";
        APP_SYSTEM: "app_system";
    }>;
    static details: Readonly<{
        primary: "primary";
        secondary: "secondary";
    }>;
    static calls: Readonly<{
        meeting: "meeting";
        ongoing: string;
        ended: string;
        initiated: string;
        cancelled: string;
        rejected: string;
        unanswered: string;
        busy: string;
        activecall: "cometchat:activecall";
        default: string;
        grid: string;
        single: string;
        spotlight: string;
        tile: string;
    }>;
    static goalType: Readonly<{
        allOf: import("@cometchat/chat-sdk-javascript").GoalType.ALL_OF;
        anyOf: import("@cometchat/chat-sdk-javascript").GoalType.ANY_OF;
        anyAction: import("@cometchat/chat-sdk-javascript").GoalType.ANY_ACTION;
        none: import("@cometchat/chat-sdk-javascript").GoalType.NONE;
    }>;
}
//# sourceMappingURL=CometChatUIKitConstants.d.ts.map