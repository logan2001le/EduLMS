import { ICallEventsData } from "../types/callEvents";
import { CometChatCallsException } from "./CometChatCallsException";
interface IOngoingCallListener {
    onUserJoined: (user: Partial<ICallEventsData["onUserJoined"]>) => void;
    onUserLeft: (user: Partial<ICallEventsData["onUserJoined"]>) => void;
    onUserListUpdated: (userList: Partial<ICallEventsData["onUserListUpdated"]>) => void;
    onMediaDeviceListUpdated: (devices: Partial<ICallEventsData["onMediaDeviceListUpdated"]>) => void;
    onRecordingStarted: (event: Partial<ICallEventsData["onRecordingStarted"]>) => void;
    onRecordingStopped: (event: Partial<ICallEventsData["onRecordingStopped"]>) => void;
    onScreenShareStarted: () => void;
    onScreenShareStopped: () => void;
    onUserMuted: (event: Partial<ICallEventsData["onUserMuted"]>) => void;
    onUserUnMuted: (event: Partial<ICallEventsData["onUserUnMuted"]>) => void;
    onCallSwitchedToVideo: (event: Partial<ICallEventsData["onCallSwitchedToVideo"]>) => void;
    onCallEnded: () => void;
    onCallEndButtonPressed: () => void;
    onError: (error: CometChatCallsException) => void;
}
export declare class OngoingCallListener {
    /**
     * @internal
    */
    onYouLeft?: Function;
    /**
     * @internal
    */
    onYouJoined?: Function;
    /**
     * This event is triggered when a user joins the call.
    */
    onUserJoined?: IOngoingCallListener["onUserJoined"];
    /**
     * This event is triggered when a user leaves the call.
    */
    onUserLeft?: IOngoingCallListener["onUserLeft"];
    /**
     * This event is triggered when the participant list of the call changes.
    */
    onUserListUpdated?: IOngoingCallListener["onUserListUpdated"];
    /**
     * This event is triggered when the media device list changes.
    */
    onMediaDeviceListUpdated?: IOngoingCallListener["onMediaDeviceListUpdated"];
    /**
     * This event is triggered when someone starts recording the call.
    */
    onRecordingStarted?: IOngoingCallListener["onRecordingStarted"];
    /**
     * This event is triggered when someone stops recording the call.
    */
    onRecordingStopped?: IOngoingCallListener["onRecordingStopped"];
    /**
     * This event is triggered when someone starts sharing their screen in the call.
    */
    onScreenShareStarted?: IOngoingCallListener["onScreenShareStarted"];
    /**
     * This event is triggered when someone stops sharing their screen in the call.
    */
    onScreenShareStopped?: IOngoingCallListener["onScreenShareStopped"];
    /**
     * This event is triggered when a user is muted.
    */
    onUserMuted?: IOngoingCallListener["onUserMuted"];
    /**
     * This event is triggered when a user is unmuted.
     */
    onUserUnMuted?: IOngoingCallListener["onUserUnMuted"];
    /**
     * This event is triggered when an audio call is switched to a video call.
    */
    onCallSwitchedToVideo?: IOngoingCallListener["onCallSwitchedToVideo"];
    /**
     * This event is triggered when the call is ended.
    */
    onCallEnded?: IOngoingCallListener["onCallEnded"];
    /**
     * This event is triggered when an error occurs.
    */
    onError?: IOngoingCallListener["onError"];
    /**
     * This event is triggered when user presses end call button.
    */
    onCallEndButtonPressed?: IOngoingCallListener["onCallEndButtonPressed"];
    constructor(eventObj: Partial<IOngoingCallListener>);
}
export {};
